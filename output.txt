Determine the general class (examples: Cryptographic, C Runtime, Networking, Simple arithmetic) of the function that this assembly routine belongs to.

```assembly
00     XOR        ECX ,ECX
02     MOV        EAX ,ECX
    LAB_140001004
04     TEST       EAX ,EAX
06     JNZ        LAB_14000100e
08     INC        index
0a     INC        sum
    LAB_14000100e
0e     CMP        index ,0x1
11     JNZ        LAB_14000101a
13     INC        index
15     ADD        sum ,0x2
    LAB_14000101a
1a     CMP        index ,0x2
1d     JZ         LAB_14000102c
1f     ADD        sum ,0x4
22     INC        index
27     JL         LAB_140001004
2b    RET
    LAB_14000102c
2c     LEA        index ,[sum  + 0x3 ]
2f    RET
```

Function Class:
Cryptographic, C Runtime, Networking, Simple Arithmetic

To determine the general class of the function that this assembly routine belongs to, we need to analyze the structure and operations of the code. The given assembly code appears to be part of a function that calculates a sum based on the index and a sum value.

Here's a step-by-step breakdown of the function:

1. **Initialization**: The function starts by initializing two variables, `index` and `sum`, to 0. This is done using the `MOV` instructions.

2. **Loop Execution**: The function then enters a loop that continues until `index` reaches 0.

3. **Index Increment**: Inside the loop, the function increments the `index` variable.

4. **Sum Calculation**: For each iteration, the function calculates the sum of `index` and stores it in `sum`.

5. **Index Adjustment**: If `index` exceeds 0x1, the function increments `index` by 1.

6. **Loop Exit Condition**: The
